AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  test-multistep

  Sample SAM Template for test-multistep

Parameters:
  TestClientId:
    Type: String
    Description: ClientId used for the test user pool
    Default: 5et67k120so4il228vielrkch0
  Region:
    Type: String
    Description: The region this lambda function and corresponding resources are in
    Default: us-east-1
  MemberTableName:
    Type: String
    Description: The table used to store SellTheDips General user information
    Default : members

Resources:
  NewMemberConfirmationStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/confirm-user.asl.json
      DefinitionSubstitutions:

        ConfirmNewEmailArn: !GetAtt ConfirmNewEmail.Arn
        AddMemberToDynamoFunctionArn: !GetAtt AddMemberToDynamoFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref TransactionTable

      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref ConfirmNewEmail
        - LambdaInvokePolicy:
            FunctionName: !Ref AddMemberToDynamoDB
#        - DynamoDBWritePolicy:
#            TableName: !Ref TransactionTable

  ConfirmNewEmail:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/confirm-user-email/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          AWS_USER_POOL_CLIENT_ID: !Ref TestClientId
          REGION: !Ref Region

  AddMemberToDynamoDB:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/add-member-to-dynamo/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          DYNAMO_TABLE_NAME: !Ref TestClientId
          REGION: !Ref Region

Outputs:
  # StockTradingStateMachineHourlyTradingSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  StockTradingStateMachineArn:
    Description: "Stock Trading state machine ARN"
    Value: !Ref StockTradingStateMachine
  StockTradingStateMachineRole:
    Description: "IAM Role created for Stock Trading state machine based on the specified SAM Policy Templates"
    Value: !GetAtt StockTradingStateMachineRole.Arn
